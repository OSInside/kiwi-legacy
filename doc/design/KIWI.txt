Naming convention:
We have adopted the following naming convention:

Public methods:
- Start with a lower case letter and use camelCase names
- These methods are expceted to be callable and used by any other code
  in kiwi

Protected methods:
- Start with p_ followed by a name starting with a lower case letter
  and using cameCase notation
- These methods are used in base classes and are expected to be only called
  by children of the base class

Private methods:
- Start with __ followed by a name starting with a lower case letter
  and using cameCase notation
- These methods are private and are expected to be called only from
  within the class where they are defined
- perlcritic will complain about non called private methods

Data flow:
The process and flow of information starts with the command parser and 
"executable" kiwi.pl. When packages kiwi.pl changes to kiwi. The main
objective of the parser is to collect all the command line data, create
the command line object, implemented in KIWICommandline.pm, and then start
the image build process by instantiating the image creator, implemented in
KIWIImageCreator.pm. Based on the information in the command line object the
image creator makes decisions about the actions to take and orchestrates the
image build procedure.

Kiwi implements a logging facility in KIWILog.pm which is implemented as a
Singleton. All classes in KIWI log messages and thus the Singleton
implementation of the logger allows us to access the log object from any
location in the code without having to pass the object around.

